/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tcms.tutors;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.*;
import java.util.*;
import tcms.users.User;
import tcms.users.UserManager;
import tcms.tutors.TutorManager;
import tcms.students.StudentManager;

/**
 *
 * @author chaiz
 */
public class DeleteClassPage extends javax.swing.JFrame {
private User user;
private UserManager um;
private TutorManager tm;
private StudentManager sm;


    /**
     * Creates new form DeleteClassPage
     */
   public DeleteClassPage(User user, UserManager um, TutorManager tm, StudentManager sm) {
    initComponents();
    this.user = user;
    this.um = um;
    this.tm = tm;
    this.sm = sm;
    loadClasses();
}

private void loadClasses() {
    DefaultTableModel model = (DefaultTableModel) tblClasses.getModel();
    model.setRowCount(0);

    try (BufferedReader br = new BufferedReader(new FileReader("schedule.txt"))) {
        String line;
        while ((line = br.readLine()) != null) {
            String[] parts = line.split(",");
            if (parts.length >= 7) {
                int tutorID = Integer.parseInt(parts[1].trim());
                if (tutorID == 1) { // Change to dynamic tutorID later
                    model.addRow(new Object[]{
                        parts[2], // Class ID
                        parts[3], // Subject
                        parts[4], // Date
                        parts[5], // Time
                        parts[6]  // Location
                    });
                }
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblClasses = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        btnDelete = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Class ID", "Subject", "Date", "Time", "Location"
            }
        ));
        jScrollPane1.setViewportView(tblClasses);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBack.setText("Close");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(btnDelete)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(39, 39, 39)))
                .addComponent(btnBack)
                .addContainerGap())
        );
        
        setVisible(true);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
int selectedRow = tblClasses.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Please select a class to delete.");
        return;
    }

    String selectedClassID = tblClasses.getValueAt(selectedRow, 0).toString();

    List<String> updatedLines = new ArrayList<>();

    try (BufferedReader br = new BufferedReader(new FileReader("schedule.txt"))) {
        String line;
        while ((line = br.readLine()) != null) {
            String[] parts = line.split(",");
            if (parts.length >= 3 && !parts[2].equals(selectedClassID)) {
                updatedLines.add(line); // keep lines that are NOT the one to delete
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error reading file.");
        return;
    }

    try (BufferedWriter bw = new BufferedWriter(new FileWriter("schedule.txt"))) {
        for (String line : updatedLines) {
            bw.write(line);
            bw.newLine();
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error writing file.");
        return;
    }

    JOptionPane.showMessageDialog(this, "Class deleted successfully.");
    loadClasses(); // Refresh table     
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
new TutorDashboard(user, um, tm, sm).setVisible(true);
    dispose(); 
    }//GEN-LAST:event_btnBackActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblClasses;
    // End of variables declaration//GEN-END:variables
}
